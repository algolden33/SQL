# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--Which songs have a popularity score below 90 but have a danceablity score of at least .7
SELECT * 
FROM Spotifydata
WHERE popularity < 90
AND danceability >= .7
ORDER BY danceability desc
;

--Whose songs are more danceable Dua Lipa or Olivia Rodrigo?
SELECT artist_name, avg(danceability)
FROM Spotifydata
Where artist_name is 'Dua Lipa'
OR artist_name is 'Olivia Rodrigo'
GROUP BY artist_name

--Answer: Dua Lipa
;

--Which songs have an average tempo above 120?
SELECT track_name, tempo
FROM Spotifydata
WHERE tempo > 120
Order BY tempo asc;
;

--Show me all artists whose songs have an average tempo of at least 90
SELECT artist_name, avg(tempo)
FROM Spotifydata
GROUP BY artist_name
Having avg(tempo) >= 90
Order by avg(tempo) asc;
;
